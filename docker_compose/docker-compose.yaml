services:
  api:
    profiles: [ "api" ]
    container_name: web_api.api
    image: web_api
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    command: ["python", "main.py"]
    depends_on:
      - postgres
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-./config/config.template.toml}
    volumes:
      - ..:/app/
    networks:
      - web_api.postgres.network
  postgres_migration:
    profiles: [ "migration" ]
    container_name: web_api.postgres_migration
    image: web_api
    build:
      context: ..
    depends_on:
      - postgres
    networks:
      - web_api.postgres.network
    volumes:
      - ..:/app/
    environment:
      - CONFIG_PATH=${CONFIG_PATH:-./config/config.template.toml}
    command: [ "python", "-m", "alembic", "upgrade", "head" ]
  postgres:
    profiles: [ "api", "migration" ]
    container_name: web_api.postgres
    image: "postgres:16-alpine"
    hostname: web_api.postgres
    restart: unless-stopped
    expose:
      - "5432"
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - web_api.postgres.network
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - web_api.postgres.data:/var/lib/postgresql/users:rw
volumes:
  web_api.postgres.data: {}
networks:
  web_api.postgres.network: {}